/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getBasePluginAuthorityDecoder,
  getBasePluginAuthorityEncoder,
  getExternalPluginAdapterSchemaDecoder,
  getExternalPluginAdapterSchemaEncoder,
  type BasePluginAuthority,
  type BasePluginAuthorityArgs,
  type ExternalPluginAdapterSchema,
  type ExternalPluginAdapterSchemaArgs,
} from '.';

export type BaseLinkedAppData = {
  dataAuthority: BasePluginAuthority;
  schema: ExternalPluginAdapterSchema;
};

export type BaseLinkedAppDataArgs = {
  dataAuthority: BasePluginAuthorityArgs;
  schema: ExternalPluginAdapterSchemaArgs;
};

export function getBaseLinkedAppDataEncoder(): Encoder<BaseLinkedAppDataArgs> {
  return getStructEncoder([
    ['dataAuthority', getBasePluginAuthorityEncoder()],
    ['schema', getExternalPluginAdapterSchemaEncoder()],
  ]);
}

export function getBaseLinkedAppDataDecoder(): Decoder<BaseLinkedAppData> {
  return getStructDecoder([
    ['dataAuthority', getBasePluginAuthorityDecoder()],
    ['schema', getExternalPluginAdapterSchemaDecoder()],
  ]);
}

export function getBaseLinkedAppDataCodec(): Codec<
  BaseLinkedAppDataArgs,
  BaseLinkedAppData
> {
  return combineCodec(
    getBaseLinkedAppDataEncoder(),
    getBaseLinkedAppDataDecoder()
  );
}
