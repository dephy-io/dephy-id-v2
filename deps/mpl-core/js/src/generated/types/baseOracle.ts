/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getBaseExtraAccountDecoder,
  getBaseExtraAccountEncoder,
  getBaseValidationResultsOffsetDecoder,
  getBaseValidationResultsOffsetEncoder,
  type BaseExtraAccount,
  type BaseExtraAccountArgs,
  type BaseValidationResultsOffset,
  type BaseValidationResultsOffsetArgs,
} from '.';

export type BaseOracle = {
  baseAddress: Address;
  baseAddressConfig: Option<BaseExtraAccount>;
  resultsOffset: BaseValidationResultsOffset;
};

export type BaseOracleArgs = {
  baseAddress: Address;
  baseAddressConfig: OptionOrNullable<BaseExtraAccountArgs>;
  resultsOffset: BaseValidationResultsOffsetArgs;
};

export function getBaseOracleEncoder(): Encoder<BaseOracleArgs> {
  return getStructEncoder([
    ['baseAddress', getAddressEncoder()],
    ['baseAddressConfig', getOptionEncoder(getBaseExtraAccountEncoder())],
    ['resultsOffset', getBaseValidationResultsOffsetEncoder()],
  ]);
}

export function getBaseOracleDecoder(): Decoder<BaseOracle> {
  return getStructDecoder([
    ['baseAddress', getAddressDecoder()],
    ['baseAddressConfig', getOptionDecoder(getBaseExtraAccountDecoder())],
    ['resultsOffset', getBaseValidationResultsOffsetDecoder()],
  ]);
}

export function getBaseOracleCodec(): Codec<BaseOracleArgs, BaseOracle> {
  return combineCodec(getBaseOracleEncoder(), getBaseOracleDecoder());
}
