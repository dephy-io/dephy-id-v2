/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';
import {
  getBasePluginAuthorityDecoder,
  getBasePluginAuthorityEncoder,
  type BasePluginAuthority,
  type BasePluginAuthorityArgs,
} from '.';

export type BaseLinkedDataKey =
  | { __kind: 'LinkedLifecycleHook'; fields: readonly [Address] }
  | { __kind: 'LinkedAppData'; fields: readonly [BasePluginAuthority] };

export type BaseLinkedDataKeyArgs =
  | { __kind: 'LinkedLifecycleHook'; fields: readonly [Address] }
  | { __kind: 'LinkedAppData'; fields: readonly [BasePluginAuthorityArgs] };

export function getBaseLinkedDataKeyEncoder(): Encoder<BaseLinkedDataKeyArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'LinkedLifecycleHook',
      getStructEncoder([['fields', getTupleEncoder([getAddressEncoder()])]]),
    ],
    [
      'LinkedAppData',
      getStructEncoder([
        ['fields', getTupleEncoder([getBasePluginAuthorityEncoder()])],
      ]),
    ],
  ]);
}

export function getBaseLinkedDataKeyDecoder(): Decoder<BaseLinkedDataKey> {
  return getDiscriminatedUnionDecoder([
    [
      'LinkedLifecycleHook',
      getStructDecoder([['fields', getTupleDecoder([getAddressDecoder()])]]),
    ],
    [
      'LinkedAppData',
      getStructDecoder([
        ['fields', getTupleDecoder([getBasePluginAuthorityDecoder()])],
      ]),
    ],
  ]);
}

export function getBaseLinkedDataKeyCodec(): Codec<
  BaseLinkedDataKeyArgs,
  BaseLinkedDataKey
> {
  return combineCodec(
    getBaseLinkedDataKeyEncoder(),
    getBaseLinkedDataKeyDecoder()
  );
}

// Data Enum Helpers.
export function baseLinkedDataKey(
  kind: 'LinkedLifecycleHook',
  data: GetDiscriminatedUnionVariantContent<
    BaseLinkedDataKeyArgs,
    '__kind',
    'LinkedLifecycleHook'
  >['fields']
): GetDiscriminatedUnionVariant<
  BaseLinkedDataKeyArgs,
  '__kind',
  'LinkedLifecycleHook'
>;
export function baseLinkedDataKey(
  kind: 'LinkedAppData',
  data: GetDiscriminatedUnionVariantContent<
    BaseLinkedDataKeyArgs,
    '__kind',
    'LinkedAppData'
  >['fields']
): GetDiscriminatedUnionVariant<
  BaseLinkedDataKeyArgs,
  '__kind',
  'LinkedAppData'
>;
export function baseLinkedDataKey<
  K extends BaseLinkedDataKeyArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isBaseLinkedDataKey<K extends BaseLinkedDataKey['__kind']>(
  kind: K,
  value: BaseLinkedDataKey
): value is BaseLinkedDataKey & { __kind: K } {
  return value.__kind === kind;
}
