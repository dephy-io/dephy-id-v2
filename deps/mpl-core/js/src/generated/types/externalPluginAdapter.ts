/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';
import {
  getBaseAppDataDecoder,
  getBaseAppDataEncoder,
  getBaseDataSectionDecoder,
  getBaseDataSectionEncoder,
  getBaseLifecycleHookDecoder,
  getBaseLifecycleHookEncoder,
  getBaseLinkedAppDataDecoder,
  getBaseLinkedAppDataEncoder,
  getBaseLinkedLifecycleHookDecoder,
  getBaseLinkedLifecycleHookEncoder,
  getBaseOracleDecoder,
  getBaseOracleEncoder,
  type BaseAppData,
  type BaseAppDataArgs,
  type BaseDataSection,
  type BaseDataSectionArgs,
  type BaseLifecycleHook,
  type BaseLifecycleHookArgs,
  type BaseLinkedAppData,
  type BaseLinkedAppDataArgs,
  type BaseLinkedLifecycleHook,
  type BaseLinkedLifecycleHookArgs,
  type BaseOracle,
  type BaseOracleArgs,
} from '.';

export type ExternalPluginAdapter =
  | { __kind: 'LifecycleHook'; fields: readonly [BaseLifecycleHook] }
  | { __kind: 'Oracle'; fields: readonly [BaseOracle] }
  | { __kind: 'AppData'; fields: readonly [BaseAppData] }
  | {
      __kind: 'LinkedLifecycleHook';
      fields: readonly [BaseLinkedLifecycleHook];
    }
  | { __kind: 'LinkedAppData'; fields: readonly [BaseLinkedAppData] }
  | { __kind: 'DataSection'; fields: readonly [BaseDataSection] };

export type ExternalPluginAdapterArgs =
  | { __kind: 'LifecycleHook'; fields: readonly [BaseLifecycleHookArgs] }
  | { __kind: 'Oracle'; fields: readonly [BaseOracleArgs] }
  | { __kind: 'AppData'; fields: readonly [BaseAppDataArgs] }
  | {
      __kind: 'LinkedLifecycleHook';
      fields: readonly [BaseLinkedLifecycleHookArgs];
    }
  | { __kind: 'LinkedAppData'; fields: readonly [BaseLinkedAppDataArgs] }
  | { __kind: 'DataSection'; fields: readonly [BaseDataSectionArgs] };

export function getExternalPluginAdapterEncoder(): Encoder<ExternalPluginAdapterArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'LifecycleHook',
      getStructEncoder([
        ['fields', getTupleEncoder([getBaseLifecycleHookEncoder()])],
      ]),
    ],
    [
      'Oracle',
      getStructEncoder([['fields', getTupleEncoder([getBaseOracleEncoder()])]]),
    ],
    [
      'AppData',
      getStructEncoder([
        ['fields', getTupleEncoder([getBaseAppDataEncoder()])],
      ]),
    ],
    [
      'LinkedLifecycleHook',
      getStructEncoder([
        ['fields', getTupleEncoder([getBaseLinkedLifecycleHookEncoder()])],
      ]),
    ],
    [
      'LinkedAppData',
      getStructEncoder([
        ['fields', getTupleEncoder([getBaseLinkedAppDataEncoder()])],
      ]),
    ],
    [
      'DataSection',
      getStructEncoder([
        ['fields', getTupleEncoder([getBaseDataSectionEncoder()])],
      ]),
    ],
  ]);
}

export function getExternalPluginAdapterDecoder(): Decoder<ExternalPluginAdapter> {
  return getDiscriminatedUnionDecoder([
    [
      'LifecycleHook',
      getStructDecoder([
        ['fields', getTupleDecoder([getBaseLifecycleHookDecoder()])],
      ]),
    ],
    [
      'Oracle',
      getStructDecoder([['fields', getTupleDecoder([getBaseOracleDecoder()])]]),
    ],
    [
      'AppData',
      getStructDecoder([
        ['fields', getTupleDecoder([getBaseAppDataDecoder()])],
      ]),
    ],
    [
      'LinkedLifecycleHook',
      getStructDecoder([
        ['fields', getTupleDecoder([getBaseLinkedLifecycleHookDecoder()])],
      ]),
    ],
    [
      'LinkedAppData',
      getStructDecoder([
        ['fields', getTupleDecoder([getBaseLinkedAppDataDecoder()])],
      ]),
    ],
    [
      'DataSection',
      getStructDecoder([
        ['fields', getTupleDecoder([getBaseDataSectionDecoder()])],
      ]),
    ],
  ]);
}

export function getExternalPluginAdapterCodec(): Codec<
  ExternalPluginAdapterArgs,
  ExternalPluginAdapter
> {
  return combineCodec(
    getExternalPluginAdapterEncoder(),
    getExternalPluginAdapterDecoder()
  );
}

// Data Enum Helpers.
export function externalPluginAdapter(
  kind: 'LifecycleHook',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterArgs,
    '__kind',
    'LifecycleHook'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterArgs,
  '__kind',
  'LifecycleHook'
>;
export function externalPluginAdapter(
  kind: 'Oracle',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterArgs,
    '__kind',
    'Oracle'
  >['fields']
): GetDiscriminatedUnionVariant<ExternalPluginAdapterArgs, '__kind', 'Oracle'>;
export function externalPluginAdapter(
  kind: 'AppData',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterArgs,
    '__kind',
    'AppData'
  >['fields']
): GetDiscriminatedUnionVariant<ExternalPluginAdapterArgs, '__kind', 'AppData'>;
export function externalPluginAdapter(
  kind: 'LinkedLifecycleHook',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterArgs,
    '__kind',
    'LinkedLifecycleHook'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterArgs,
  '__kind',
  'LinkedLifecycleHook'
>;
export function externalPluginAdapter(
  kind: 'LinkedAppData',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterArgs,
    '__kind',
    'LinkedAppData'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterArgs,
  '__kind',
  'LinkedAppData'
>;
export function externalPluginAdapter(
  kind: 'DataSection',
  data: GetDiscriminatedUnionVariantContent<
    ExternalPluginAdapterArgs,
    '__kind',
    'DataSection'
  >['fields']
): GetDiscriminatedUnionVariant<
  ExternalPluginAdapterArgs,
  '__kind',
  'DataSection'
>;
export function externalPluginAdapter<
  K extends ExternalPluginAdapterArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isExternalPluginAdapter<
  K extends ExternalPluginAdapter['__kind'],
>(
  kind: K,
  value: ExternalPluginAdapter
): value is ExternalPluginAdapter & { __kind: K } {
  return value.__kind === kind;
}
