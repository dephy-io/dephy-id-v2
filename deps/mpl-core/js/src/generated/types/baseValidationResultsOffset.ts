/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU64Decoder,
  getU64Encoder,
  getUnitDecoder,
  getUnitEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

export type BaseValidationResultsOffset =
  | { __kind: 'NoOffset' }
  | { __kind: 'Anchor' }
  | { __kind: 'Custom'; fields: readonly [bigint] };

export type BaseValidationResultsOffsetArgs =
  | { __kind: 'NoOffset' }
  | { __kind: 'Anchor' }
  | { __kind: 'Custom'; fields: readonly [number | bigint] };

export function getBaseValidationResultsOffsetEncoder(): Encoder<BaseValidationResultsOffsetArgs> {
  return getDiscriminatedUnionEncoder([
    ['NoOffset', getUnitEncoder()],
    ['Anchor', getUnitEncoder()],
    [
      'Custom',
      getStructEncoder([['fields', getTupleEncoder([getU64Encoder()])]]),
    ],
  ]);
}

export function getBaseValidationResultsOffsetDecoder(): Decoder<BaseValidationResultsOffset> {
  return getDiscriminatedUnionDecoder([
    ['NoOffset', getUnitDecoder()],
    ['Anchor', getUnitDecoder()],
    [
      'Custom',
      getStructDecoder([['fields', getTupleDecoder([getU64Decoder()])]]),
    ],
  ]);
}

export function getBaseValidationResultsOffsetCodec(): Codec<
  BaseValidationResultsOffsetArgs,
  BaseValidationResultsOffset
> {
  return combineCodec(
    getBaseValidationResultsOffsetEncoder(),
    getBaseValidationResultsOffsetDecoder()
  );
}

// Data Enum Helpers.
export function baseValidationResultsOffset(
  kind: 'NoOffset'
): GetDiscriminatedUnionVariant<
  BaseValidationResultsOffsetArgs,
  '__kind',
  'NoOffset'
>;
export function baseValidationResultsOffset(
  kind: 'Anchor'
): GetDiscriminatedUnionVariant<
  BaseValidationResultsOffsetArgs,
  '__kind',
  'Anchor'
>;
export function baseValidationResultsOffset(
  kind: 'Custom',
  data: GetDiscriminatedUnionVariantContent<
    BaseValidationResultsOffsetArgs,
    '__kind',
    'Custom'
  >['fields']
): GetDiscriminatedUnionVariant<
  BaseValidationResultsOffsetArgs,
  '__kind',
  'Custom'
>;
export function baseValidationResultsOffset<
  K extends BaseValidationResultsOffsetArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isBaseValidationResultsOffset<
  K extends BaseValidationResultsOffset['__kind'],
>(
  kind: K,
  value: BaseValidationResultsOffset
): value is BaseValidationResultsOffset & { __kind: K } {
  return value.__kind === kind;
}
