/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getBasePluginAuthorityDecoder,
  getBasePluginAuthorityEncoder,
  getExternalPluginAdapterSchemaDecoder,
  getExternalPluginAdapterSchemaEncoder,
  type BasePluginAuthority,
  type BasePluginAuthorityArgs,
  type ExternalPluginAdapterSchema,
  type ExternalPluginAdapterSchemaArgs,
} from '.';

export type BaseLinkedAppDataInitInfo = {
  dataAuthority: BasePluginAuthority;
  initPluginAuthority: Option<BasePluginAuthority>;
  schema: Option<ExternalPluginAdapterSchema>;
};

export type BaseLinkedAppDataInitInfoArgs = {
  dataAuthority: BasePluginAuthorityArgs;
  initPluginAuthority: OptionOrNullable<BasePluginAuthorityArgs>;
  schema: OptionOrNullable<ExternalPluginAdapterSchemaArgs>;
};

export function getBaseLinkedAppDataInitInfoEncoder(): Encoder<BaseLinkedAppDataInitInfoArgs> {
  return getStructEncoder([
    ['dataAuthority', getBasePluginAuthorityEncoder()],
    ['initPluginAuthority', getOptionEncoder(getBasePluginAuthorityEncoder())],
    ['schema', getOptionEncoder(getExternalPluginAdapterSchemaEncoder())],
  ]);
}

export function getBaseLinkedAppDataInitInfoDecoder(): Decoder<BaseLinkedAppDataInitInfo> {
  return getStructDecoder([
    ['dataAuthority', getBasePluginAuthorityDecoder()],
    ['initPluginAuthority', getOptionDecoder(getBasePluginAuthorityDecoder())],
    ['schema', getOptionDecoder(getExternalPluginAdapterSchemaDecoder())],
  ]);
}

export function getBaseLinkedAppDataInitInfoCodec(): Codec<
  BaseLinkedAppDataInitInfoArgs,
  BaseLinkedAppDataInitInfo
> {
  return combineCodec(
    getBaseLinkedAppDataInitInfoEncoder(),
    getBaseLinkedAppDataInitInfoDecoder()
  );
}
