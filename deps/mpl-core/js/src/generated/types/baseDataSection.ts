/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getBaseLinkedDataKeyDecoder,
  getBaseLinkedDataKeyEncoder,
  getExternalPluginAdapterSchemaDecoder,
  getExternalPluginAdapterSchemaEncoder,
  type BaseLinkedDataKey,
  type BaseLinkedDataKeyArgs,
  type ExternalPluginAdapterSchema,
  type ExternalPluginAdapterSchemaArgs,
} from '.';

export type BaseDataSection = {
  parentKey: BaseLinkedDataKey;
  schema: ExternalPluginAdapterSchema;
};

export type BaseDataSectionArgs = {
  parentKey: BaseLinkedDataKeyArgs;
  schema: ExternalPluginAdapterSchemaArgs;
};

export function getBaseDataSectionEncoder(): Encoder<BaseDataSectionArgs> {
  return getStructEncoder([
    ['parentKey', getBaseLinkedDataKeyEncoder()],
    ['schema', getExternalPluginAdapterSchemaEncoder()],
  ]);
}

export function getBaseDataSectionDecoder(): Decoder<BaseDataSection> {
  return getStructDecoder([
    ['parentKey', getBaseLinkedDataKeyDecoder()],
    ['schema', getExternalPluginAdapterSchemaDecoder()],
  ]);
}

export function getBaseDataSectionCodec(): Codec<
  BaseDataSectionArgs,
  BaseDataSection
> {
  return combineCodec(getBaseDataSectionEncoder(), getBaseDataSectionDecoder());
}
