/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type StakePoolUpdatableConfig = {
  minStakeAmount: bigint;
  maxStakeAmount: bigint;
  minLocktime: bigint;
  maxLocktime: bigint;
  commission: bigint;
};

export type StakePoolUpdatableConfigArgs = {
  minStakeAmount: number | bigint;
  maxStakeAmount: number | bigint;
  minLocktime: number | bigint;
  maxLocktime: number | bigint;
  commission: number | bigint;
};

export function getStakePoolUpdatableConfigEncoder(): Encoder<StakePoolUpdatableConfigArgs> {
  return getStructEncoder([
    ['minStakeAmount', getU64Encoder()],
    ['maxStakeAmount', getU64Encoder()],
    ['minLocktime', getU64Encoder()],
    ['maxLocktime', getU64Encoder()],
    ['commission', getU64Encoder()],
  ]);
}

export function getStakePoolUpdatableConfigDecoder(): Decoder<StakePoolUpdatableConfig> {
  return getStructDecoder([
    ['minStakeAmount', getU64Decoder()],
    ['maxStakeAmount', getU64Decoder()],
    ['minLocktime', getU64Decoder()],
    ['maxLocktime', getU64Decoder()],
    ['commission', getU64Decoder()],
  ]);
}

export function getStakePoolUpdatableConfigCodec(): Codec<
  StakePoolUpdatableConfigArgs,
  StakePoolUpdatableConfig
> {
  return combineCodec(
    getStakePoolUpdatableConfigEncoder(),
    getStakePoolUpdatableConfigDecoder()
  );
}
