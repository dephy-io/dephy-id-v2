/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getUnitDecoder,
  getUnitEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

export type BasePluginAuthority =
  | { __kind: 'None' }
  | { __kind: 'Owner' }
  | { __kind: 'UpdateAuthority' }
  | { __kind: 'Address'; address: Address };

export type BasePluginAuthorityArgs = BasePluginAuthority;

export function getBasePluginAuthorityEncoder(): Encoder<BasePluginAuthorityArgs> {
  return getDiscriminatedUnionEncoder([
    ['None', getUnitEncoder()],
    ['Owner', getUnitEncoder()],
    ['UpdateAuthority', getUnitEncoder()],
    ['Address', getStructEncoder([['address', getAddressEncoder()]])],
  ]);
}

export function getBasePluginAuthorityDecoder(): Decoder<BasePluginAuthority> {
  return getDiscriminatedUnionDecoder([
    ['None', getUnitDecoder()],
    ['Owner', getUnitDecoder()],
    ['UpdateAuthority', getUnitDecoder()],
    ['Address', getStructDecoder([['address', getAddressDecoder()]])],
  ]);
}

export function getBasePluginAuthorityCodec(): Codec<
  BasePluginAuthorityArgs,
  BasePluginAuthority
> {
  return combineCodec(
    getBasePluginAuthorityEncoder(),
    getBasePluginAuthorityDecoder()
  );
}

// Data Enum Helpers.
export function basePluginAuthority(
  kind: 'None'
): GetDiscriminatedUnionVariant<BasePluginAuthorityArgs, '__kind', 'None'>;
export function basePluginAuthority(
  kind: 'Owner'
): GetDiscriminatedUnionVariant<BasePluginAuthorityArgs, '__kind', 'Owner'>;
export function basePluginAuthority(
  kind: 'UpdateAuthority'
): GetDiscriminatedUnionVariant<
  BasePluginAuthorityArgs,
  '__kind',
  'UpdateAuthority'
>;
export function basePluginAuthority(
  kind: 'Address',
  data: GetDiscriminatedUnionVariantContent<
    BasePluginAuthorityArgs,
    '__kind',
    'Address'
  >
): GetDiscriminatedUnionVariant<BasePluginAuthorityArgs, '__kind', 'Address'>;
export function basePluginAuthority<
  K extends BasePluginAuthorityArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isBasePluginAuthority<K extends BasePluginAuthority['__kind']>(
  kind: K,
  value: BasePluginAuthority
): value is BasePluginAuthority & { __kind: K } {
  return value.__kind === kind;
}
